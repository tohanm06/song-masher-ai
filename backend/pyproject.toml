[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "song-masher-ai"
version = "1.0.0"
description = "Production-grade AI-powered audio mashup tool"
authors = [{name = "Song Masher AI Team"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    "sqlalchemy>=2.0.23",
    "psycopg2-binary>=2.9.9",
    "alembic>=1.13.0",
    "redis>=5.0.1",
    "celery>=5.3.4",
    "rq>=1.15.1",
    "librosa>=0.10.1",
    "soundfile>=0.12.1",
    "essentia>=2.1b6.dev1110",
    "pyloudnorm>=0.1.1",
    "scipy>=1.11.4",
    "numpy>=1.24.4",
    "torch>=2.1.1",
    "torchaudio>=2.1.1",
    "demucs>=4.0.0",
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "python-dotenv>=1.0.0",
    "pathlib>=1.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "librosa.*",
    "essentia.*",
    "demucs.*",
    "pyloudnorm.*",
]
ignore_missing_imports = true
